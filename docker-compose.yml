version: '3'

networks:
    laravel:
    # app-twocom_app-shared:
    #     external: true

services:
    nginx:
        image: nginx:stable-alpine
        container_name: nginx_one
        ports:
            - '8080:80'
        volumes:
            - ./src:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - mysql
        networks:
            - laravel
            # - app-twocom_app-shared

    mysql:
        image: mysql:5.7.29
        container_name: mysql_one
        restart: unless-stopped
        tty: true
        ports:
            - '3306:3306'
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            MYSQL_DATABASE: homestead
            MYSQL_USER: homestead
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: secret
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - laravel

    php:
        build:
            context: .
            dockerfile: php.dockerfile
        container_name: php_one
        volumes:
            - ./src:/var/www/html
        ports:
            - '9000:9000'
        environment:
            PHP_XDEBUG_IDEKEY: 'VSCODE'
        networks:
            - laravel
            # - app-twocom_app-shared

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: always
        container_name: phpmyadmin_one
        depends_on:
            - mysql
        ports:
            - '8088:80'
        environment:
            PMA_HOST: mysql
            MYSQL_ROOT_PASSWORD: secret
        networks:
            - laravel

    composer:
        image: composer:latest
        container_name: conposer_one
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        networks:
            - laravel

    npm:
        image: node:13.7
        container_name: npm_one
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']

    artisan:
        build:
            context: .
            dockerfile: php.dockerfile
        container_name: artisan_one
        volumes:
            - ./src:/var/www/html
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', '/var/www/html/artisan']
        networks:
            - laravel

    mailhog:
        container_name: mailhog_one
        image: mailhog/mailhog:latest
        ports:
            - '8025:8025'
            - '1025:1025'
